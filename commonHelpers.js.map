{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputEl = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nconst daysEl = document.querySelector('[data-days]');\nconst hoursEl = document.querySelector('[data-hours]');\nconst minutesEl = document.querySelector('[data-minutes]');\nconst secondsEl = document.querySelector('[data-seconds]');\n\nlet userSelectedDate;\nlet intervalId = null;\n\nstartBtn.disabled = true;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    console.log(selectedDates[0]);\n    if (selectedDates[0] < new Date()) {\n      iziToast.show({\n        message: 'Please choose a date in the future',\n        color: 'red',\n        position: 'topCenter',\n      });\n    } else {\n      startBtn.disabled = false;\n      userSelectedDate = selectedDates[0].getTime();\n      inputEl.disabled = true;\n    }\n  },\n};\n\nflatpickr('#datetime-picker', options);\n\nstartBtn.addEventListener('click', () => {\n  startBtn.disabled = true;\n  intervalId = setInterval(() => {\n    const differenceInTime = userSelectedDate - new Date();\n\n    if (differenceInTime < 1000) {\n      clearInterval(intervalId);\n      inputEl.disabled = false;\n    }\n    const result = convertMs(differenceInTime);\n    viewOfTimer(result);\n  }, 1000);\n  \n});\n\nfunction convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = Math.floor(ms / day);\n  // Remaining hours\n  const hours = Math.floor((ms % day) / hour);\n  // Remaining minutes\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  // Remaining seconds\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction viewOfTimer({ days, hours, minutes, seconds }) {\n  daysEl.textContent = `${days}`.padStart(2, '0');\n  hoursEl.textContent = `${hours}`.padStart(2, '0');\n  minutesEl.textContent = `${minutes}`.padStart(2, '0');\n  secondsEl.textContent = `${seconds}`.padStart(2, '0');\n}"],"names":["inputEl","startBtn","daysEl","hoursEl","minutesEl","secondsEl","userSelectedDate","intervalId","options","selectedDates","iziToast","flatpickr","differenceInTime","result","convertMs","viewOfTimer","ms","days","hours","minutes","seconds"],"mappings":"2GAKA,MAAMA,EAAU,SAAS,cAAc,kBAAkB,EACnDC,EAAW,SAAS,cAAc,cAAc,EAChDC,EAAS,SAAS,cAAc,aAAa,EAC7CC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EAEzD,IAAIC,EACAC,EAAa,KAEjBN,EAAS,SAAW,GAEpB,MAAMO,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,QAAQ,IAAIA,EAAc,EAAE,EACxBA,EAAc,GAAK,IAAI,KACzBC,EAAS,KAAK,CACZ,QAAS,qCACT,MAAO,MACP,SAAU,WAClB,CAAO,GAEDT,EAAS,SAAW,GACpBK,EAAmBG,EAAc,GAAG,QAAO,EAC3CT,EAAQ,SAAW,GAEtB,CACH,EAEAW,EAAU,mBAAoBH,CAAO,EAErCP,EAAS,iBAAiB,QAAS,IAAM,CACvCA,EAAS,SAAW,GACpBM,EAAa,YAAY,IAAM,CAC7B,MAAMK,EAAmBN,EAAmB,IAAI,KAE5CM,EAAmB,MACrB,cAAcL,CAAU,EACxBP,EAAQ,SAAW,IAErB,MAAMa,EAASC,EAAUF,CAAgB,EACzCG,EAAYF,CAAM,CACnB,EAAE,GAAI,CAET,CAAC,EAED,SAASC,EAAUE,EAAI,CAQrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAE1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EAEpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EAEjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASL,EAAY,CAAE,KAAAE,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CACtDlB,EAAO,YAAc,GAAGe,IAAO,SAAS,EAAG,GAAG,EAC9Cd,EAAQ,YAAc,GAAGe,IAAQ,SAAS,EAAG,GAAG,EAChDd,EAAU,YAAc,GAAGe,IAAU,SAAS,EAAG,GAAG,EACpDd,EAAU,YAAc,GAAGe,IAAU,SAAS,EAAG,GAAG,CACtD"}